#!/bin/sh
# Recitations list download
echo "Downloading list of recitations"
recitations=`curl https://everyayah.com/recitations_ayat.html | awk -F '[<>]' '
/<strong>.*[Kk]bps<\/strong>/ {
	if (match($3, /files missing/)) {
		skip = 1
		next
	}
	match($3, /[0-9]/)
	name = tolower(substr($3, 1, RSTART-2))
	gsub(/[ _]/, "-", name)
	gsub(/[^-0-9a-z]/, "", name)
}
/ZIP/ {
	if (skip) {
		skip = 0
		next
	}
	split($2, attr, "\"")
	url = attr[2]
	if (!names[name]) {
		printf("%s\t%s\n", name, url)
		names[name] = 1
	}
}
'`
echo

echo "Downloading list of translations"
translations=`curl http://tanzil.net/trans/ | awk -F '[<>]' '
/class="flag"/ {
	match($0, /href="[^"]+" title="Download"/)
	split(substr($0, RSTART, RLENGTH), attr, "\"")
	url = attr[2]
	split(url, parts, "/")
	sub(/\./, "-", parts[5])
	name = parts[5]
	printf("%s\t%s\n", name, url)
}
'`
echo

# Text selection
types="simple-clean"
printf "Select a text type:\n%s\n\n" "$types"
while true; do
	default_type=simple-clean
	printf "Type [$default_type]: "
	read type
	type=${type:-$default_type}
	if echo "$types" | fgrep -x "$type"; then
		break
	fi
done
echo

# Translation selection
translation_names=`echo "$translations" | awk -F '\t' '{print $1}'`
printf "Select a translation:\n%s\n\n" "$translation_names"
while true; do
	default_translation=en-sahih
	printf "Translation [$default_translation]: "
	read translation
	translation=${translation:-$default_translation}
	if echo "$translation_names" | fgrep -x "$translation"; then
		break
	fi
done
echo

# Recitation selection
recitation_names=`echo "$recitations" | awk -F '\t' '{print $1}'`
printf "Select a recitation:\n%s\n\n" "$recitation_names"
while true; do
	default_recitation="minshawy-murattal"
	printf "Recitation [$default_recitation]: "
	read recitation
	recitation=${recitation:-$default_recitation}
	if echo "$recitation_names" | fgrep -x "$recitation"; then
		break
	fi
done
echo

# Text download
mkdir -p ~/.quran/text
cd ~/.quran/text
if [ -f "$type.dat" ] && [ -f surahs.dat ]; then
	echo "Text already exits ($type)"
else
	echo "Downloading text ($type)"
	text=`curl -X POST \
		-d quranType=$type -d alef=true \
		-d outType=txt-2 -d agree=true \
		http://tanzil.net/pub/download/download.php`
	# Surahs fortune
	curl http://tanzil.net/res/text/metadata/quran-data.xml | awk '
	/<sura / {
	match($0, /index="[^"]+"/)
	n = substr($0, RSTART+7, RLENGTH-8)
	match($0, /tname="[^"]+"/)
	name = substr($0, RSTART+7, RLENGTH-8)
	match($0, /ayas="[^"]+"/)
	ayas = substr($0, RSTART+6, RLENGTH-7)
	match($0, /start="[^"]+"/)
	start = substr($0, RSTART+7, RLENGTH-8)
	if (n != 1) print "%"
	printf("%d\t%s\t%d\t%d\n", n, name, ayas, start)
	}' > surahs
	strfile surahs > /dev/null
	# Quran fortune
	echo "$text" | tr -d '\r' | awk -F '|' '
	!$0 {exit}
	{if (NR != 1) printf("%%\n");
	printf("%s\n\t\t-- Quran %d:%d\n", $3, $1, $2)}
	' | fold -s > $type
	strfile $type > /dev/null
fi
echo
# Translation download
if [ -f "$translation" ]; then
	echo "Translation already exits ($translation)"
else
	echo "Downloading translation ($translation)"
	url=`echo "$translations" | awk -F '\t' -v translation="$translation" '
		$1 == translation { print $2; exit }
	'`
	# Quran fortune
	curl -s "$url" | tr -d '\r' | awk -F '|' '
	!$0 {exit}
	{if (NR != 1) printf("%%\n");
	printf("%s\n\t\t-- Quran %d:%d\n", $3, $1, $2)}
	' | fold -s > $translation
	strfile $translation > /dev/null
fi
echo

# Recitation download
mkdir -p ~/.quran/audio
cd ~/.quran/audio
if [ -d "$recitation" ]; then
	echo "Recitation already exits ($recitation)"
else
	echo "Downloading recitation ($recitation)"
	url=`echo "$recitations" | awk -F '\t' -v recitation="$recitation" '
		$1 == recitation { print $2; exit }
	'`
	curl -L -C - -o "$recitation.zip" "$url"
	echo "Extracting recitation ($recitation)"
	unzip "$recitation" -d "$recitation" > /dev/null
fi
echo

echo Done!
